ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_TIM_PeriodElapsedCallback
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_TIM_PeriodElapsedCallback:
  26              	.LVL0:
  27              	.LFB71:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 2


  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE END 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 3


  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Init scheduler */
  96:Core/Src/main.c ****   osKernelInitialize();  /* Call init function for freertos objects (in cmsis_os2.c) */
  97:Core/Src/main.c ****   MX_FREERTOS_Init();
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Start scheduler */
 100:Core/Src/main.c ****   osKernelStart();
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Infinite loop */
 105:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 106:Core/Src/main.c ****   while (1)
 107:Core/Src/main.c ****   {
 108:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 109:Core/Src/main.c ****     // osDelay(50000);
 110:Core/Src/main.c ****     // HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 111:Core/Src/main.c ****     // osDelay(50000);
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c ****   /* USER CODE END 3 */
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****   * @brief System Clock Configuration
 121:Core/Src/main.c ****   * @retval None
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c **** void SystemClock_Config(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 4


 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /* USER CODE END 4 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /**
 163:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 164:Core/Src/main.c ****   * @note   This function is called  when TIM4 interrupt took place, inside
 165:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 166:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 167:Core/Src/main.c ****   * @param  htim : TIM handle
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 171:Core/Src/main.c **** {
  28              		.loc 1 171 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 171 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 172:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 175:Core/Src/main.c ****   if (htim->Instance == TIM4)
  38              		.loc 1 175 3 is_stmt 1 view .LVU2
  39              		.loc 1 175 11 is_stmt 0 view .LVU3
  40 0002 0268     		ldr	r2, [r0]
  41              		.loc 1 175 6 view .LVU4
  42 0004 034B     		ldr	r3, .L5
  43 0006 9A42     		cmp	r2, r3
  44 0008 00D0     		beq	.L4
  45              	.LVL1:
  46              	.L1:
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     HAL_IncTick();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 182:Core/Src/main.c **** }
  47              		.loc 1 182 1 view .LVU5
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 5


  48 000a 08BD     		pop	{r3, pc}
  49              	.LVL2:
  50              	.L4:
 177:Core/Src/main.c ****   }
  51              		.loc 1 177 5 is_stmt 1 view .LVU6
  52 000c FFF7FEFF 		bl	HAL_IncTick
  53              	.LVL3:
  54              		.loc 1 182 1 is_stmt 0 view .LVU7
  55 0010 FBE7     		b	.L1
  56              	.L6:
  57 0012 00BF     		.align	2
  58              	.L5:
  59 0014 00080040 		.word	1073743872
  60              		.cfi_endproc
  61              	.LFE71:
  63              		.section	.text.Error_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	Error_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	Error_Handler:
  71              	.LFB72:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** void Error_Handler(void)
 189:Core/Src/main.c **** {
  72              		.loc 1 189 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 190:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 191:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 192:Core/Src/main.c ****   __disable_irq();
  78              		.loc 1 192 3 view .LVU9
  79              	.LBB4:
  80              	.LBI4:
  81              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 6


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 7


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 8


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  82              		.loc 2 140 27 view .LVU10
  83              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  84              		.loc 2 142 3 view .LVU11
  85              		.syntax unified
  86              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  87 0000 72B6     		cpsid i
  88              	@ 0 "" 2
  89              		.thumb
  90              		.syntax unified
  91              	.L8:
  92              	.LBE5:
  93              	.LBE4:
 193:Core/Src/main.c ****   while (1)
  94              		.loc 1 193 3 view .LVU12
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****   }
  95              		.loc 1 195 3 view .LVU13
 193:Core/Src/main.c ****   while (1)
  96              		.loc 1 193 9 view .LVU14
  97 0002 FEE7     		b	.L8
  98              		.cfi_endproc
  99              	.LFE72:
 101              		.section	.text.SystemClock_Config,"ax",%progbits
 102              		.align	1
 103              		.global	SystemClock_Config
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	SystemClock_Config:
 109              	.LFB70:
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110              		.loc 1 124 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 64
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 90B0     		sub	sp, sp, #64
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 72
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 9


 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122              		.loc 1 125 3 view .LVU16
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 125 22 is_stmt 0 view .LVU17
 124 0004 06AC     		add	r4, sp, #24
 125 0006 2822     		movs	r2, #40
 126 0008 0021     		movs	r1, #0
 127 000a 2046     		mov	r0, r4
 128 000c FFF7FEFF 		bl	memset
 129              	.LVL4:
 126:Core/Src/main.c **** 
 130              		.loc 1 126 3 is_stmt 1 view .LVU18
 126:Core/Src/main.c **** 
 131              		.loc 1 126 22 is_stmt 0 view .LVU19
 132 0010 0023     		movs	r3, #0
 133 0012 0193     		str	r3, [sp, #4]
 134 0014 0293     		str	r3, [sp, #8]
 135 0016 0393     		str	r3, [sp, #12]
 136 0018 0493     		str	r3, [sp, #16]
 137 001a 0593     		str	r3, [sp, #20]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138              		.loc 1 131 3 is_stmt 1 view .LVU20
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 139              		.loc 1 131 36 is_stmt 0 view .LVU21
 140 001c 0122     		movs	r2, #1
 141 001e 0692     		str	r2, [sp, #24]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 142              		.loc 1 132 3 is_stmt 1 view .LVU22
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 143              		.loc 1 132 30 is_stmt 0 view .LVU23
 144 0020 4FF48033 		mov	r3, #65536
 145 0024 0793     		str	r3, [sp, #28]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 146              		.loc 1 133 3 is_stmt 1 view .LVU24
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147              		.loc 1 134 3 view .LVU25
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 148              		.loc 1 134 30 is_stmt 0 view .LVU26
 149 0026 0A92     		str	r2, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150              		.loc 1 135 3 is_stmt 1 view .LVU27
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 151              		.loc 1 135 34 is_stmt 0 view .LVU28
 152 0028 0222     		movs	r2, #2
 153 002a 0D92     		str	r2, [sp, #52]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 154              		.loc 1 136 3 is_stmt 1 view .LVU29
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 155              		.loc 1 136 35 is_stmt 0 view .LVU30
 156 002c 0E93     		str	r3, [sp, #56]
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157              		.loc 1 137 3 is_stmt 1 view .LVU31
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158              		.loc 1 137 32 is_stmt 0 view .LVU32
 159 002e 4FF4E013 		mov	r3, #1835008
 160 0032 0F93     		str	r3, [sp, #60]
 138:Core/Src/main.c ****   {
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 10


 161              		.loc 1 138 3 is_stmt 1 view .LVU33
 138:Core/Src/main.c ****   {
 162              		.loc 1 138 7 is_stmt 0 view .LVU34
 163 0034 2046     		mov	r0, r4
 164 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 165              	.LVL5:
 138:Core/Src/main.c ****   {
 166              		.loc 1 138 6 discriminator 1 view .LVU35
 167 003a 78B9     		cbnz	r0, .L13
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 168              		.loc 1 145 3 is_stmt 1 view .LVU36
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169              		.loc 1 145 31 is_stmt 0 view .LVU37
 170 003c 0F23     		movs	r3, #15
 171 003e 0193     		str	r3, [sp, #4]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172              		.loc 1 147 3 is_stmt 1 view .LVU38
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 173              		.loc 1 147 34 is_stmt 0 view .LVU39
 174 0040 0221     		movs	r1, #2
 175 0042 0291     		str	r1, [sp, #8]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 176              		.loc 1 148 3 is_stmt 1 view .LVU40
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177              		.loc 1 148 35 is_stmt 0 view .LVU41
 178 0044 0023     		movs	r3, #0
 179 0046 0393     		str	r3, [sp, #12]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 180              		.loc 1 149 3 is_stmt 1 view .LVU42
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 181              		.loc 1 149 36 is_stmt 0 view .LVU43
 182 0048 4FF48062 		mov	r2, #1024
 183 004c 0492     		str	r2, [sp, #16]
 150:Core/Src/main.c **** 
 184              		.loc 1 150 3 is_stmt 1 view .LVU44
 150:Core/Src/main.c **** 
 185              		.loc 1 150 36 is_stmt 0 view .LVU45
 186 004e 0593     		str	r3, [sp, #20]
 152:Core/Src/main.c ****   {
 187              		.loc 1 152 3 is_stmt 1 view .LVU46
 152:Core/Src/main.c ****   {
 188              		.loc 1 152 7 is_stmt 0 view .LVU47
 189 0050 01A8     		add	r0, sp, #4
 190 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 191              	.LVL6:
 152:Core/Src/main.c ****   {
 192              		.loc 1 152 6 discriminator 1 view .LVU48
 193 0056 18B9     		cbnz	r0, .L14
 156:Core/Src/main.c **** 
 194              		.loc 1 156 1 view .LVU49
 195 0058 10B0     		add	sp, sp, #64
 196              	.LCFI3:
 197              		.cfi_remember_state
 198              		.cfi_def_cfa_offset 8
 199              		@ sp needed
 200 005a 10BD     		pop	{r4, pc}
 201              	.L13:
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 11


 202              	.LCFI4:
 203              		.cfi_restore_state
 140:Core/Src/main.c ****   }
 204              		.loc 1 140 5 is_stmt 1 view .LVU50
 205 005c FFF7FEFF 		bl	Error_Handler
 206              	.LVL7:
 207              	.L14:
 154:Core/Src/main.c ****   }
 208              		.loc 1 154 5 view .LVU51
 209 0060 FFF7FEFF 		bl	Error_Handler
 210              	.LVL8:
 211              		.cfi_endproc
 212              	.LFE70:
 214              		.section	.text.main,"ax",%progbits
 215              		.align	1
 216              		.global	main
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	main:
 222              	.LFB69:
  67:Core/Src/main.c **** 
 223              		.loc 1 67 1 view -0
 224              		.cfi_startproc
 225              		@ Volatile: function does not return.
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI5:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
  76:Core/Src/main.c **** 
 233              		.loc 1 76 3 view .LVU53
 234 0002 FFF7FEFF 		bl	HAL_Init
 235              	.LVL9:
  83:Core/Src/main.c **** 
 236              		.loc 1 83 3 view .LVU54
 237 0006 FFF7FEFF 		bl	SystemClock_Config
 238              	.LVL10:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 239              		.loc 1 90 3 view .LVU55
 240 000a FFF7FEFF 		bl	MX_GPIO_Init
 241              	.LVL11:
  96:Core/Src/main.c ****   MX_FREERTOS_Init();
 242              		.loc 1 96 3 view .LVU56
 243 000e FFF7FEFF 		bl	osKernelInitialize
 244              	.LVL12:
  97:Core/Src/main.c **** 
 245              		.loc 1 97 3 view .LVU57
 246 0012 FFF7FEFF 		bl	MX_FREERTOS_Init
 247              	.LVL13:
 100:Core/Src/main.c **** 
 248              		.loc 1 100 3 view .LVU58
 249 0016 FFF7FEFF 		bl	osKernelStart
 250              	.LVL14:
 251              	.L16:
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 12


 106:Core/Src/main.c ****   {
 252              		.loc 1 106 3 view .LVU59
 115:Core/Src/main.c ****   /* USER CODE END 3 */
 253              		.loc 1 115 3 view .LVU60
 106:Core/Src/main.c ****   {
 254              		.loc 1 106 9 view .LVU61
 255 001a FEE7     		b	.L16
 256              		.cfi_endproc
 257              	.LFE69:
 259              		.text
 260              	.Letext0:
 261              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 262              		.file 4 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 263              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 264              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 265              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 266              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 267              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 268              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 269              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 270              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 271              		.file 13 "Core/Inc/gpio.h"
 272              		.file 14 "<built-in>"
ARM GAS  /var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:19     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:25     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:59     .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:64     .text.Error_Handler:00000000 $t
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:70     .text.Error_Handler:00000000 Error_Handler
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:102    .text.SystemClock_Config:00000000 $t
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:108    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:215    .text.main:00000000 $t
/var/folders/hq/30r609yj11d4cs56ydc5lv5h0000gn/T//ccT4bNvY.s:221    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
